// index.js
const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const mongoose = require('mongoose');
const morgan = require('morgan');
const config = require('./config/config');
const logger = require('./utils/logger');
const errorHandler = require('./middlewares/errorHandler');
const authMiddleware = require('./middlewares/authMiddleware');
const path = require('path');
// const authRoutes = require('./routes/authRoutes');

console.log('Initializing Express...');
const app = express();

console.log('Applying middlewares...');
app.use(cors());
app.use(morgan('tiny', { stream: logger.stream }));

// Apply body-parser only to non-auth routes
app.use(bodyParser.json(), (req, res, next) => {
    const skipPaths = ['/v1/auth/signup', '/v1/auth/signin'];
    if (!skipPaths.includes(req.path)) {
        bodyParser.json()(req, res, next);
    } else {
        next();
    }
});

app.use(express.static(path.join(__dirname, '..', 'public')));

// for home page.
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, '..', 'public', 'index.html'));
});

// Database Connection
console.log('Connecting to MongoDB...');
mongoose.connect(config.mongoUri)
.then(() => logger.info('MongoDB Connected'))
.catch(err => logger.error('MongoDB Connection Error:', err));
 

console.log('Setting up routes...');
const authRoutes = require('./routes/authRoutes');


app.use('/v1/auth', authRoutes);

console.log('debug1');

console.log('Configuring error handling middleware...');
app.use(errorHandler);


process.on('uncaughtException', (error) => {
    console.error('Uncaught Exception:', error.message);
    process.exit(1);
});


console.log('Starting server...');
app.listen(config.port, () => {
  logger.info(`Server running on port ${config.port}`);
  console.log(`Server is up and running on port ${config.port}`);
});
